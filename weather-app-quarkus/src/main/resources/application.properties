# Dev local environment with in postgresql database
%dev-postgresql-db.quarkus.datasource.url=jdbc:postgresql://$(WEATHER_POSTGRESQL_SERVICE_HOST):$(WEATHER_POSTGRESQL_SERVICE_PORT)/weather
%dev-postgresql-db.quarkus.datasource.driver=org.postgresql.Driver
%dev-postgresql-db.quarkus.datasource.username = mauro
%dev-postgresql-db.quarkus.datasource.password = secret
%dev-postgresql-db.quarkus.datasource.max-size=8
%dev-postgresql-db.quarkus.datasource.min-size=2
%dev-postgresql-db.quarkus.hibernate-orm.database.generation=drop-and-create
%dev-postgresql-db.quarkus.hibernate-orm.statistics=true
%dev-postgresql-db.quarkus.hibernate-orm.sql-load-script=import-postgresql.sql
%dev-postgresql-db.quarkus.jaeger.service-name=weatherservice 
%dev-postgresql-db.quarkus.jaeger.sampler-type=const
%dev-postgresql-db.quarkus.jaeger.sampler-param=1
%dev-postgresql-db.quarkus.jaeger.endpoint=http://jaeger-collector:14268/api/traces

# Dev local environment with in memory database
%dev-memory-db.quarkus.datasource.url=jdbc:h2:file:~/Progetti/h2/weather;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
%dev-memory-db.quarkus.datasource.driver=org.h2.Driver
%dev-memory-db.quarkus.datasource.max-size=8
%dev-memory-db.quarkus.datasource.min-size=2
%dev-memory-db.quarkus.hibernate-orm.database.generation=drop-and-create
%dev-memory-db.quarkus.hibernate-orm.statistics=true
%dev-memory-db.quarkus.hibernate-orm.sql-load-script=import-h2.sql

